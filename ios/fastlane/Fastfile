default_platform(:ios)

def delete_temp_keychain(name)
    delete_keychain(
      name: name
    ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
    create_keychain(
      name: name,
      password: password,
      unlock: false,
      timeout: false
    )
end

def ensure_temp_keychain(name, password)
    delete_temp_keychain(name)
    create_temp_keychain(name, password)
end

platform :ios do
  desc "iOS Lanes"
    lane :install_certificate_and_profile do

        api_key = app_store_connect_api_key(
            key_id: ENV["APP_STORE_CONNECT_KEY_ID"],
            issuer_id: ENV["APP_STORE_CONNECT_ISSUER_ID"],
            key_content: ENV["APP_STORE_CONNECT_KEY_CONTENT"],
            is_key_content_base64: true,
            in_house: false,
        )

        keychain_name = ENV["TEMP_KEYCHAIN_USER"]
        keychain_password = ENV["TEMP_KEYCHAIN_PASSWORD"]
        ensure_temp_keychain(keychain_name, keychain_password)

        match(
            type: 'development',
            git_basic_authorization: Base64.strict_encode64(ENV["GIT_AUTHORIZATION"]),
            keychain_name: keychain_name,
            keychain_password: keychain_password,
            api_key: api_key
        )

    end

    lane :set_xcode_version do

        xcversion(version: '12.4')

    end

    lane :distribute_ios_app do

        firebase_app_distribution(
            app: ENV["FIREBASE_APP_ID_IOS"],
            testers: ENV["IOS_TESTERS"],
            release_notes: "Test",
            firebase_cli_token: ENV["FIREBASE_CLI_TOKEN"],
            ipa_path: "build/ios/ipa/*.ipa"
        )

    end

end
